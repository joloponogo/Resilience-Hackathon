// Generated by view binder compiler. Do not edit!
package com.example.test1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.test1.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFirstBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonFirst;

  @NonNull
  public final AutoCompleteTextView end;

  @NonNull
  public final Button searchButton;

  @NonNull
  public final AutoCompleteTextView start;

  @NonNull
  public final TextInputLayout textInputLayout;

  @NonNull
  public final TextInputLayout textInputLayout2;

  private FragmentFirstBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonFirst,
      @NonNull AutoCompleteTextView end, @NonNull Button searchButton,
      @NonNull AutoCompleteTextView start, @NonNull TextInputLayout textInputLayout,
      @NonNull TextInputLayout textInputLayout2) {
    this.rootView = rootView;
    this.buttonFirst = buttonFirst;
    this.end = end;
    this.searchButton = searchButton;
    this.start = start;
    this.textInputLayout = textInputLayout;
    this.textInputLayout2 = textInputLayout2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFirstBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFirstBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_first, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFirstBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_first;
      Button buttonFirst = ViewBindings.findChildViewById(rootView, id);
      if (buttonFirst == null) {
        break missingId;
      }

      id = R.id.end;
      AutoCompleteTextView end = ViewBindings.findChildViewById(rootView, id);
      if (end == null) {
        break missingId;
      }

      id = R.id.searchButton;
      Button searchButton = ViewBindings.findChildViewById(rootView, id);
      if (searchButton == null) {
        break missingId;
      }

      id = R.id.start;
      AutoCompleteTextView start = ViewBindings.findChildViewById(rootView, id);
      if (start == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      TextInputLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      id = R.id.textInputLayout2;
      TextInputLayout textInputLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout2 == null) {
        break missingId;
      }

      return new FragmentFirstBinding((ConstraintLayout) rootView, buttonFirst, end, searchButton,
          start, textInputLayout, textInputLayout2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
